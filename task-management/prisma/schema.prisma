// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id            String     @id @default(cuid())
  name          String?
  email         String?    @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  roles         RoleUser[]

  @@map("users")
}

model Role {
  id          Int              @id @default(autoincrement())
  name        String
  permissions PermissionRole[]
  RoleUser    RoleUser[]

  @@map("roles")
}

model Permission {
  id    Int              @id @default(autoincrement())
  name  String
  // PermissionRole PermissionRole @relation(fields: [], references: [])
  roles PermissionRole[]

  @@map("permissions")
}

model RoleUser {
  // permission    Permission @relation(fields: [permission_id], references: [id])
  role_id Int
  user_id String

  user User @relation(fields: [user_id], references: [id])
  role Role @relation(fields: [role_id], references: [id])

  @@id([role_id, user_id])
  @@map("role_user")
}

model PermissionRole {
  permission Permission @relation(fields: [permission_id], references: [id])
  role       Role       @relation(fields: [role_id], references: [id])

  permission_id Int
  role_id       Int

  @@id([permission_id, role_id])
  @@map("permission_role")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verification_tokens")
}
